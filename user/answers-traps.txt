	哪些寄存器保存函数的参数？例如，在main对printf的调用中，哪个寄存器保存13？
a0到a7寄存器，a2寄存器保存13

	main的汇编代码中对函数f的调用在哪里？对g的调用在哪里(提示：编译器可能会将函数内联）
在 printf("%d %d\n", f(8)+1, 13); 行中，f(8) 被用作 printf 的一个参数，此处调用了函数f，而在f(8) 的实现中调用了 g(x)。编译器将函数内联处理了。

	printf函数位于哪个地址？
printf函数的起始地址为0x628
 

	在main中printf的jalr之后的寄存器ra中有什么值？
auipc指的是将高位立即数左移12位后，加到PC上，并将结果保存到dest位置
jalr指令会将当前PC+4保存在rd中，然后跳转到指定的偏移地址。
因此在main中printf的jalr之后的寄存器ra的值为0x34+4=0x38

	运行以下代码。
unsigned int i = 0x00646c72;
printf("H%x Wo%s", 57616, &i);
程序的输出是什么？输出取决于RISC-V小端存储的事实。如果RISC-V是大端存储，为了得到相同的输出，你会把i设置成什么？是否需要将57616更改为其他值？

输出结果为：He110 World
printf 函数的格式化字符串包含两个转换符：
%x 用来打印第一个参数的十六进制值 57616，为e110，%s 用来打印从 i 指向的字符串，在内存中，由于 RISC-V 是小端存储，所以参照ASCII码表，72 6c 64 00为"rld"。
如果RISC-V是大端存储，需要把i设置为0x726c6400，而57616无需改变。

	在下面的代码中，“y=”之后将打印什么(注：答案不是一个特定的值）？为什么会发生这种情况？
printf("x=%d y=%d", 3);
将打印a2寄存器的值，因为格式化字符串中有两个格式说明符 %d，但只有一个参数被传递，所以程序的行为是未定义的。因此printf 会从 a2 寄存器读取参数。

