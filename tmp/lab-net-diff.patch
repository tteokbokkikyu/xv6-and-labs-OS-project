diff --git a/kernel/e1000.c b/kernel/e1000.c
index 70a2adf..e77aeb5 100644
--- a/kernel/e1000.c
+++ b/kernel/e1000.c
@@ -102,7 +102,26 @@ e1000_transmit(struct mbuf *m)
   // the TX descriptor ring so that the e1000 sends it. Stash
   // a pointer so that it can be freed after sending.
   //
-  
+  acquire(&e1000_lock);//上锁
+  uint32 index = regs[E1000_TDT];//读取下一个可用索引
+  if (!(tx_ring[index].status & E1000_TXD_STAT_DD)) {
+    release(&e1000_lock);//解锁退出
+    return -1; //检查该位置的环是否溢出
+    }
+  else if (tx_mbufs[index]){
+    mbuffree(tx_mbufs[index]);
+    }
+    
+  //填写描述符
+  tx_ring[index].addr=(uint64)m->head;
+  tx_ring[index].length=m->len;
+  tx_ring[index].cmd = E1000_TXD_CMD_RS | E1000_TXD_CMD_EOP ;//设置完成标志、表示数据包结束
+  tx_ring[index].status = 0;
+  tx_mbufs[index] = m;//保存mbuf指针
+
+  regs[E1000_TDT] = (index + 1) % TX_RING_SIZE;//更新环位置
+  release(&e1000_lock);//解锁
+
   return 0;
 }
 
@@ -115,6 +134,28 @@ e1000_recv(void)
   // Check for packets that have arrived from the e1000
   // Create and deliver an mbuf for each packet (using net_rx()).
   //
+   uint32 next_index = (regs[E1000_RDT] + 1) % RX_RING_SIZE;//获取索引
+   while (rx_ring[next_index].status & E1000_RXD_STAT_DD){
+    rx_mbufs[next_index]->len = rx_ring[next_index].length;//更新mbuf长度
+     net_rx(rx_mbufs[next_index]);//将mbuf传递给网络栈
+
+     struct mbuf *new_mbuf = mbufalloc(0);
+    if (!new_mbuf)
+      panic("e1000: mbufalloc failed");//分配新的mbuf
+
+    
+    rx_ring[next_index].addr = (uint64)new_mbuf->head;//更新address
+    rx_ring[next_index].status = 0;  // 清除状态位
+
+   
+    rx_mbufs[next_index] = new_mbuf; // 更新 RX mbuf 指针数组
+    regs[E1000_RDT] = next_index;    // 更新下一个接收描述符索引
+    next_index = (next_index + 1) % RX_RING_SIZE;//更新索引
+   }//有数据包可用，进入循环
+
+  
+
+
 }
 
 void
diff --git a/packets.pcap b/packets.pcap
index 82d353e..68c93a2 100644
Binary files a/packets.pcap and b/packets.pcap differ
diff --git a/time.txt b/time.txt
new file mode 100644
index 0000000..62f9457
--- /dev/null
+++ b/time.txt
@@ -0,0 +1 @@
+6
\ No newline at end of file
